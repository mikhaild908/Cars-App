// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Cars.CodedUI.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// TestGo - Use 'TestGoParams' to pass parameters into this method.
        /// </summary>
        public void TestGo()
        {
            #region Variable Declarations
            WinClient uIChromeLegacyWindowClient = this.UIUseUIAutomationToTesWindow.UIChromeLegacyWindowWindow.UIChromeLegacyWindowClient;
            WpfButton uIGOButton = this.UICarsWindow.UIGOButton;
            #endregion

            // Click 'Chrome Legacy Window' client
            Mouse.Click(uIChromeLegacyWindowClient, new Point(963, 946));

            // Launch '%USERPROFILE%\Documents\Visual Studio 2015\Projects\Cars.App\Cars.WPF.UI\bin\Debug\Cars.WPF.UI.vshost.exe'
            ApplicationUnderTest uICarsWindow = ApplicationUnderTest.Launch(this.TestGoParams.UICarsWindowExePath, this.TestGoParams.UICarsWindowAlternateExePath);

            // Click 'Go!!!' button
            Mouse.Click(uIGOButton, new Point(964, 58));
        }
        
        #region Properties
        public virtual TestGoParams TestGoParams
        {
            get
            {
                if ((this.mTestGoParams == null))
                {
                    this.mTestGoParams = new TestGoParams();
                }
                return this.mTestGoParams;
            }
        }
        
        public UIUseUIAutomationToTesWindow UIUseUIAutomationToTesWindow
        {
            get
            {
                if ((this.mUIUseUIAutomationToTesWindow == null))
                {
                    this.mUIUseUIAutomationToTesWindow = new UIUseUIAutomationToTesWindow();
                }
                return this.mUIUseUIAutomationToTesWindow;
            }
        }
        
        public UICarsWindow UICarsWindow
        {
            get
            {
                if ((this.mUICarsWindow == null))
                {
                    this.mUICarsWindow = new UICarsWindow();
                }
                return this.mUICarsWindow;
            }
        }
        #endregion
        
        #region Fields
        private TestGoParams mTestGoParams;
        
        private UIUseUIAutomationToTesWindow mUIUseUIAutomationToTesWindow;
        
        private UICarsWindow mUICarsWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestGo'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestGoParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Documents\Visual Studio 2015\Projects\Cars.App\Cars.WPF.UI\bin\Debug\Cars.WPF.UI.vshost.exe'
        /// </summary>
        public string UICarsWindowExePath = "C:\\Users\\mcdumlao\\Documents\\Visual Studio 2015\\Projects\\Cars.App\\Cars.WPF.UI\\bin\\" +
            "Debug\\Cars.WPF.UI.vshost.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Documents\Visual Studio 2015\Projects\Cars.App\Cars.WPF.UI\bin\Debug\Cars.WPF.UI.vshost.exe'
        /// </summary>
        public string UICarsWindowAlternateExePath = "%USERPROFILE%\\Documents\\Visual Studio 2015\\Projects\\Cars.App\\Cars.WPF.UI\\bin\\Debu" +
            "g\\Cars.WPF.UI.vshost.exe";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUseUIAutomationToTesWindow : WinWindow
    {
        
        public UIUseUIAutomationToTesWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Use UI Automation To Test Your Code - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("Use UI Automation To Test Your Code - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIChromeLegacyWindowWindow UIChromeLegacyWindowWindow
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow == null))
                {
                    this.mUIChromeLegacyWindowWindow = new UIChromeLegacyWindowWindow(this);
                }
                return this.mUIChromeLegacyWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIChromeLegacyWindowWindow mUIChromeLegacyWindowWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIChromeLegacyWindowWindow : WinWindow
    {
        
        public UIChromeLegacyWindowWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "227492888";
            this.WindowTitles.Add("Use UI Automation To Test Your Code - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinClient UIChromeLegacyWindowClient
        {
            get
            {
                if ((this.mUIChromeLegacyWindowClient == null))
                {
                    this.mUIChromeLegacyWindowClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowClient.SearchProperties[WinControl.PropertyNames.Name] = "Chrome Legacy Window";
                    this.mUIChromeLegacyWindowClient.WindowTitles.Add("Use UI Automation To Test Your Code - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIChromeLegacyWindowClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICarsWindow : WpfWindow
    {
        
        public UICarsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Cars";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Cars");
            #endregion
        }
        
        #region Properties
        public WpfButton UIGOButton
        {
            get
            {
                if ((this.mUIGOButton == null))
                {
                    this.mUIGOButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIGOButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "cmdStart";
                    this.mUIGOButton.WindowTitles.Add("Cars");
                    #endregion
                }
                return this.mUIGOButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIGOButton;
        #endregion
    }
}
